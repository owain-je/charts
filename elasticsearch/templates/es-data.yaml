apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: "{{ printf "%s-data-%s" .Release.Name .Values.Name | trunc 24 }}"
  labels:
    heritage: {{.Release.Service | quote }}
    release: {{.Release.Name | quote }}
    chart: "{{.Chart.Name}}-{{.Chart.Version}}"
    component: "{{.Release.Name}}-{{.Values.Component}}"
    role: data
spec:
  serviceName: "{{ printf "%s-data-%s" .Release.Name .Values.Name | trunc 24 }}"
  replicas: {{default 3 .Values.DataReplicas }}
  template:
    metadata:
      labels:
        heritage: {{.Release.Service | quote }}
        release: {{.Release.Name | quote }}
        chart: "{{.Chart.Name}}-{{.Chart.Version}}"
        component: "{{.Release.Name}}-{{.Values.Component}}"
        role: data
      annotations:
        pod.beta.kubernetes.io/init-containers: '[
          {
          "name": "sysctl",
            "image": "busybox",
            "imagePullPolicy": "IfNotPresent",
            "command": ["sysctl", "-w", "vm.max_map_count=262144"],
            "securityContext": {
              "privileged": true
            }
          },
          {
          "name": "sysctl1",
            "image": "busybox",
            "imagePullPolicy": "IfNotPresent",
            "command": ["sysctl", "-w", "net.ipv6.conf.all.disable_ipv6=1"],
            "securityContext": {
              "privileged": true
            }
          }
        ]'
    spec:
      terminationGracePeriodSeconds: 10
      nodeSelector:
        type: elasticsearch
      tolerations:
      - key: "dedicated"
        operator: "Equal"
        value: "elasticsearch"
        effect: "NoSchedule"
      containers:
      - name: es-data        
        securityContext:
          privileged: true
          capabilities:
            add:
              - IPC_LOCK
        image: "{{.Values.Image}}:{{.Values.ImageTag}}"
        imagePullPolicy: "{{.Values.ImagePullPolicy}}"
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: "CLUSTER_NAME"
          value: "{{ printf "%s-%s" .Release.Name .Values.Name | trunc 24 }}"
        - name: "DISCOVERY_SERVICE"
          value: "{{ printf "%s-%s-discovery" .Release.Name .Values.Name | trunc 24 }}" 
        - name: NODE_MASTER
          value: "false"
        - name: NODE_INGEST
          value: "false"
        - name: HTTP_ENABLE
          value: "false"
        - name: NETWORK_HOST
          value: 0.0.0.0
        - name: "ES_JAVA_OPTS"
          value: "-Xms{{.Values.DataHeapSize}} -Xmx{{.Values.DataHeapSize}}"
        - name: "ES_PLUGINS_INSTALL"
          value: {{ .Values.Plugins }}
        - name: "NODE_NAME"
          value: " "
        ports:
        - containerPort: 9300
          name: transport
          protocol: TCP
        resources:
          requests:
            cpu: "{{.Values.DataCpuRequests}}"
            memory: "{{.Values.DataMemoryRequests}}"
          limits:
            cpu: "{{.Values.DataCpuLimits}}"
            memory: "{{.Values.DataMemoryLimits}}"
        #livenessProbe:
        #  httpGet:
        #    path: /
        #    port: 9200
        #  initialDelaySeconds: 30
        #  timeoutSeconds: 1
        #readinessProbe:
        #  httpGet:
        #    path: /
        #    port: 9200
        #  timeoutSeconds: 5
        volumeMounts:
        - mountPath: /data
          name: elasticsearch-data
  volumeClaimTemplates:
  - metadata:
      name: elasticsearch-data
      annotations:
        volume.{{ .Values.DataStorageClassVersion }}.kubernetes.io/storage-class: "{{ .Values.DataStorageClass }}"
    spec:
      accessModes: [ ReadWriteOnce ]
      resources:
        requests:
          storage: "{{.Values.DataStorage}}"


